<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.ozonehis</groupId>
    <artifactId>maven-commons</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>../maven-commons</relativePath>
  </parent>

  <artifactId>maven-parent</artifactId>
  <name>Ozone Maven Parent</name>
  <description>Parent project for Ozone implementation projects</description>
  <packaging>pom</packaging>

  <organization>
    <name>Ozone HIS</name>
    <url>https://www.ozone-his.com</url>
  </organization>

  <developers>
    <developer>
      <name>Mekom Solutions</name>
      <url>https://www.mekomsolutions.com</url>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <ozone.artifactId>ozone</ozone.artifactId>
    <ozone.groupId>com.ozonehis</ozone.groupId>
    <ozone.version>1.0.0-SNAPSHOT</ozone.version>
    <ozone-scripts.version>1.0.0-SNAPSHOT</ozone-scripts.version>

  </properties>

  <dependencies>
    <dependency>
      <groupId>${ozone.groupId}</groupId>
      <artifactId>${ozone.artifactId}</artifactId>
      <type>zip</type>
      <version>${ozone.version}</version>
    </dependency>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozone-scripts</artifactId>
      <type>zip</type>
      <version>${ozone-scripts.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Unpack Ozone zip -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>Unpack Ozone</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>${project.build.directory}/${ozone.artifactId}</outputDirectory>
              <includeArtifactIds>${ozone.artifactId}</includeArtifactIds>
            </configuration>
          </execution>

          <execution>
            <id>Copy OpenMRS modules to a temporary location</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <useBaseVersion>true</useBaseVersion>
              <outputDirectory>${project.build.directory}/openmrs_modules/</outputDirectory>
              <!-- copying jars and omods only -->
              <includeTypes>jar, omod</includeTypes>
            </configuration>
          </execution>
          
          <execution>
            <id>Unpack Ozone Scripts</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>${project.build.directory}/scripts</outputDirectory>
              <includeArtifactIds>ozone-scripts</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
         <execution>
            <!-- Exclude files from Ozone -->
            <!-- We exclude nothing here, but distros should override this with any exclusions they need -->
            <id>Exclude unneeded Ozone files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/${ozone.artifactId}</directory>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Copy reference-application-spa-assemble-config.json to frontend working directory -->
            <id>Copy reference-application-spa-assemble-config.json to local working directory</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/openmrs_frontend</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/${ozone.artifactId}/distro/configs/openmrs/frontend_assembly</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Copy local spa-assemble-config.json if any -->
            <id>Copy spa-assemble-config.json</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/openmrs_frontend
              </outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/configs/openmrs/frontend_assembly</directory>
                  <includes>
                    <include>spa-assemble-config.json</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Copy and substitute some helper files (for demo and Gitpod) -->
            <id>Copy and substitute some helper files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/.mvn</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}</directory>
                  <includes>
                    <include>mvnw</include>
                    <include>mvnw.cmd</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/scripts</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/scripts</directory>
                  <includes>
                    <include>*.sh</include>
                  </includes>
                  <excludes>
                    <exclude>start-ozone.sh</exclude>
                  </excludes>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}/scripts</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${project.build.directory}/scripts</directory>
                  <includes>
                    <include>*.sh</include>
                  </includes>
                  <excludes>
                    <exclude>start-ozone.sh</exclude>
                  </excludes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Copy the docker-compose-files.txt file to set the services to run -->
            <id>Copy docker-compose-files.txt</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/run/docker/scripts</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/scripts</directory>
                  <includes>
                    <include>docker-compose-files.txt</include>
                    <include>start-ozone.sh</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Override with local config files-->
            <id>Copy local resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/distro/configs</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/configs</directory>
                  <excludes>
                    <exclude>.gitkeep</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Copy OpenMRS modules -->
            <id>Copy OpenMRS modules</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/distro/binaries/openmrs/modules</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/openmrs_modules</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>Rename JAR to OMOD</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
                <mkdir dir="${project.build.directory}/openmrs_modules" />
                <if>
                  <resourcecount when="greater" count="0">
                    <fileset dir="${project.build.directory}/openmrs_modules" includes="*-omod-*.jar" />
                  </resourcecount>
                  <then>
                    <move todir="${project.build.directory}/openmrs_modules">
                      <fileset dir="${project.build.directory}/openmrs_modules" />
                      <mapper from="^(.+)-omod-(.+)\.jar" to="\1-\2.omod" type="regexp" />
                    </move>
                    <delete>
                      <fileset dir="${project.build.directory}/openmrs_modules" excludes="**/*.omod" />
                    </delete>
                  </then>
                </if>
              </target>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b3</version>
            <exclusions>
              <exclusion>
                <groupId>ant</groupId>
                <artifactId>ant</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <id>Rebuild OpenMRS Frontend if necessary</id>
            <goals>
              <goal>execute</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <scripts>
                <script>file://${project.build.directory}/openmrs/frontend_assembly/build-openmrs-frontend.groovy</script>
              </scripts>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- packaging the distro as a installable/deployable file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>Package Ozone Artifact</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
