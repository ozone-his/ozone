<project>

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ozonehis</groupId>
  <artifactId>ozone</artifactId>
  <name>Ozone</name>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <organization>
    <name>Ozone HIS</name>
    <url>https://www.ozone-his.com</url>
  </organization>
  <developers>
    <developer>
      <name>Mekom Solutions</name>
      <url>https://www.mekomsolutions.com</url>
    </developer>
  </developers>

  <properties>
    <!-- Dependency versions -->
    <ozoneDistroVersion>1.0.0-SNAPSHOT</ozoneDistroVersion>
    <ozoneDockerComposeVersion>1.0.0-SNAPSHOT</ozoneDockerComposeVersion>

    <!-- Classifier for the dependency report artifact -->
    <dependencyReportClassifier>dependencies</dependencyReportClassifier>
  </properties>

  <modules>
    <module>distro</module>
  </modules>

  <dependencies>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozone-distro</artifactId>
      <type>zip</type>
      <version>${ozoneDistroVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozone-docker-compose</artifactId>
      <type>zip</type>
      <version>${ozoneDockerComposeVersion}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>Copy Ozone Docker Compose</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <useBaseVersion>true</useBaseVersion>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/run/docker</outputDirectory>
              <includeArtifactIds>ozone-docker-compose</includeArtifactIds>
            </configuration>
          </execution>

          <execution>
            <id>Copy Ozone Distro</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <useBaseVersion>true</useBaseVersion>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/distro</outputDirectory>
              <includeArtifactIds>ozone-distro</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Compile a dependency report -->
      <plugin>
        <groupId>net.mekomsolutions.maven.plugin</groupId>
        <artifactId>dependency-tracker-maven-plugin</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <executions>
          <execution>
            <id>Complile dependency report</id>
            <phase>compile</phase>
            <goals>
              <goal>track</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Attach the dependency report to the build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>

          <execution>
            <id>Attach the dependency report</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>
                    ${project.build.directory}/${project.artifactId}-${project.version}-dependencies.txt</file>
                  <type>txt</type>
                  <classifier>${dependencyReportClassifier}</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- packaging the distro as a installable/deployable file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>Package Ozone Artifact</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>${project.basedir}/src/main/assembly/assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
  
  <repositories>
    <repository>
      <id>mks-nexus-public</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-public/</url>
    </repository>
    <repository>
      <id>openmrs-repo</id>
      <name>OpenMRS Nexus Repository</name>
      <url>https://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
    </repository>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>openmrs-repo</id>
      <name>OpenMRS Nexus Repository</name>
      <url>https://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>openmrs-snapshots</id>
      <name>OpenMRS Public Repository</name>
      <url>https://mavenrepo.openmrs.org/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>mks-nexus-public</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-public/</url>
    </pluginRepository>
    <pluginRepository>
      <id>mks-nexus-snapshots</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>validator</id>
      <build>
        <plugins>

          <!-- hooking the OpenMRS config validation to the integration-test phase -->
          <plugin>
            <groupId>org.openmrs.maven.plugins</groupId>
            <artifactId>openmrs-packager-maven-plugin</artifactId>
            <version>1.7.0</version>
            <executions>
              <execution>
                <id>validate-configurations</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>validate-configurations</goal>
                </goals>
                <configuration>
                  <sourceDir>${project.build.directory}/configuration</sourceDir>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <name>Mekom Solutions Nexus repo for releases</name>
      <id>mks-nexus-public-releases</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-releases</url>
    </repository>
    <snapshotRepository>
      <name>Mekom Solutions Nexus repo for snapshots</name>
      <id>mks-nexus-public-snapshots</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-snapshots</url>
    </snapshotRepository>
  </distributionManagement>

</project>