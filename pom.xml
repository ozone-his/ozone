<project>

  <parent>
    <groupId>com.ozonehis</groupId>
    <artifactId>maven-commons</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>maven-commons</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>ozone</artifactId>
  <name>Ozone</name>
  <description>The enterprise-grade health information system built with OpenMRS 3</description>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <organization>
    <name>Ozone HIS</name>
    <url>https://www.ozone-his.com</url>
  </organization>
  <developers>
    <developer>
      <name>Mekom Solutions</name>
      <url>https://www.mekomsolutions.com</url>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Dependency versions -->
    <ozoneDistroVersion>1.0.0-SNAPSHOT</ozoneDistroVersion>
    <ozoneDockerComposeVersion>1.0.0-SNAPSHOT</ozoneDockerComposeVersion>

    <!-- Classifier for the dependency report artifact -->
    <dependencyReportClassifier>dependencies</dependencyReportClassifier>
    <true>true</true>
  </properties>

  <modules>
    <module>maven-commons</module>
    <module>maven-parent</module>
    <module>distro</module>
  </modules>

  <dependencies>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozone-distro</artifactId>
      <type>zip</type>
      <version>${ozoneDistroVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozone-docker-compose</artifactId>
      <type>zip</type>
      <version>${ozoneDockerComposeVersion}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>Copy Ozone Docker Compose</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/run/docker</outputDirectory>
              <includeArtifactIds>ozone-docker-compose</includeArtifactIds>
            </configuration>
          </execution>

          <execution>
            <id>Copy Ozone Distro</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/distro</outputDirectory>
              <includeArtifactIds>ozone-distro</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <executions>
          <execution><!-- Replace the Ozone Dir value in order for start-demo.sh to work -->
            <id>Set OZONE_DIR (needed by start-demo.sh)</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${project.build.directory}/set-ozone-dir.sh</executable>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <!-- Copy and substitute some helper files (for demo and Gitpod) -->
            <id>Copy and substitute some helper files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/scripts</directory>
                  <filtering>false</filtering>
                </resource>         
                <resource>
                  <directory>${project.basedir}/scripts</directory>
                  <includes>
                    <include>*.sh</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Compile a dependency report -->
      <plugin>
        <groupId>net.mekomsolutions.maven.plugin</groupId>
        <artifactId>dependency-tracker-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Compile dependency report</id>
            <phase>compile</phase>
            <goals>
              <goal>track</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Attach the dependency report to the build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>

          <execution>
            <id>Attach the dependency report</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>
                    ${project.build.directory}/${project.artifactId}-${project.version}-dependencies.txt</file>
                  <type>txt</type>
                  <classifier>${dependencyReportClassifier}</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- packaging the distro as a installable/deployable file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>Package Ozone Artifact</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
